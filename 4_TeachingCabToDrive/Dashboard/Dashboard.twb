<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9200.16.0303.2316                                -->
<workbook source-platform='win' version='9.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='9.2'>
      <aliases enabled='yes' />
      <column caption='TrialSize' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='100'>
        <calculation class='tableau' formula='100' />
      </column>
      <column caption='line' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.90000000000000002'>
        <calculation class='tableau' formula='0.90000000000000002' />
      </column>
      <column alias='Gamma\Alpha' caption='SwapAlphaGamma' datatype='boolean' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='false'>
        <calculation class='tableau' formula='false' />
        <aliases>
          <alias key='false' value='Gamma\Alpha' />
          <alias key='true' value='Alpha\Gamma' />
        </aliases>
        <members>
          <member alias='Alpha\Gamma' value='true' />
          <member alias='Gamma\Alpha' value='false' />
        </members>
      </column>
    </datasource>
    <datasource caption='dfRunLog' inline='true' name='textscan.11p71ra0ulb2ak14awv5n11ipk66' version='9.2'>
      <connection class='textscan' directory='C:/git/UdacityMachineLearningEngineerNanodegree/4_TeachingCabToDrive' filename='dfRunLog.csv' password='' server='' username=''>
        <relation name='dfRunLog#csv' table='[dfRunLog#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='real' name='Trial' ordinal='1' />
            <column datatype='real' name='Distance' ordinal='2' />
            <column datatype='real' name='DeadLine' ordinal='3' />
            <column datatype='string' name='Sucess' ordinal='4' />
            <column datatype='real' name='Steps' ordinal='5' />
            <column datatype='real' name='Epsilon' ordinal='6' />
            <column datatype='real' name='Alpha' ordinal='7' />
            <column datatype='real' name='Gamma' ordinal='8' />
            <column datatype='real' name='QTableSize' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[dfRunLog#csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Trial]</local-name>
            <parent-name>[dfRunLog#csv]</parent-name>
            <remote-alias>Trial</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Distance]</local-name>
            <parent-name>[dfRunLog#csv]</parent-name>
            <remote-alias>Distance</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeadLine</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeadLine]</local-name>
            <parent-name>[dfRunLog#csv]</parent-name>
            <remote-alias>DeadLine</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sucess</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sucess]</local-name>
            <parent-name>[dfRunLog#csv]</parent-name>
            <remote-alias>Sucess</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Steps</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Steps]</local-name>
            <parent-name>[dfRunLog#csv]</parent-name>
            <remote-alias>Steps</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Epsilon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Epsilon]</local-name>
            <parent-name>[dfRunLog#csv]</parent-name>
            <remote-alias>Epsilon</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alpha</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Alpha]</local-name>
            <parent-name>[dfRunLog#csv]</parent-name>
            <remote-alias>Alpha</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gamma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gamma]</local-name>
            <parent-name>[dfRunLog#csv]</parent-name>
            <remote-alias>Gamma</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QTableSize</remote-name>
            <remote-type>5</remote-type>
            <local-name>[QTableSize]</local-name>
            <parent-name>[dfRunLog#csv]</parent-name>
            <remote-alias>QTableSize</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[dfRunLog#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]&quot;' value='QTable Size on Last Step' />
          <alias key='&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200408829952:qk]&quot;' value='Number of Successes' />
          <alias key='&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Steps:qk]&quot;' value='Total Steps Taken' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='real' name='[Alpha]' role='dimension' type='ordinal' />
      <column caption='SucessInt' datatype='real' name='[Calculation_954200200408829952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='float(if [Sucess]=&apos;Y&apos; then 1 else 0 END)' />
      </column>
      <column caption='PercentageCorrect' datatype='real' default-format='p0%' name='[Calculation_954200200413347841]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_954200200408829952]/[Parameters].[Parameter 1]' />
      </column>
      <column aggregation='Sum' caption='Field1' datatype='real' name='[Calculation_954200201835646980]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 3] then [Alpha] else [Gamma] end' />
      </column>
      <column aggregation='Sum' caption='Field2' datatype='real' name='[Calculation_954200201835786245]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 3] then[Gamma] else [Alpha] end' />
      </column>
      <column caption='Dead Line' datatype='real' name='[DeadLine]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='real' name='[Epsilon]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='real' name='[Gamma]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Q Table Size' datatype='real' name='[QTableSize]' role='measure' type='quantitative' />
      <column datatype='real' name='[Steps]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='real' name='[Trial]' role='dimension' type='ordinal' />
      <column-instance column='[QTableSize]' derivation='Max' name='[max:QTableSize:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_954200200408829952]' derivation='Sum' name='[pcto:sum:Calculation_954200200408829952:qk:10]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[Gamma]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_954200200408829952]' derivation='Sum' name='[pcto:sum:Calculation_954200200408829952:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_954200200408829952]' derivation='Sum' name='[pcto:sum:Calculation_954200200408829952:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_954200200408829952]' derivation='Sum' name='[pcto:sum:Calculation_954200200408829952:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Table' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_954200200408829952]' derivation='Sum' name='[pcto:sum:Calculation_954200200408829952:qk:9]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[Alpha]' ordering-type='Field' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_954200200408829952]' derivation='Sum' name='[pcto:sum:Calculation_954200200408829952:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_954200200408829952]' derivation='Sum' name='[sum:Calculation_954200200408829952:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_954200200413347841]' derivation='Sum' name='[sum:Calculation_954200200413347841:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_954200201835646980]' derivation='Sum' name='[sum:Calculation_954200201835646980:qk]' pivot='key' type='quantitative' />
      <column-instance column='[QTableSize]' derivation='Sum' name='[sum:QTableSize:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Steps]' derivation='Sum' name='[sum:Steps:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.409978' measure-ordering='alphabetic' measure-percentage='0.372017' parameter-percentage='0.218004' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[pcto:sum:Calculation_954200200408829952:qk:10]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[pcto:sum:Calculation_954200200408829952:qk:2]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[pcto:sum:Calculation_954200200408829952:qk:4]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[pcto:sum:Calculation_954200200408829952:qk:5]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[pcto:sum:Calculation_954200200408829952:qk:9]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[pcto:sum:Calculation_954200200408829952:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200408829952:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200201835646980:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[Parameters].[Parameter 2]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Steps:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:QTableSize:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column caption='TrialSize' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='100'>
          <calculation class='tableau' formula='100' />
        </column>
        <column caption='line' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.90000000000000002'>
          <calculation class='tableau' formula='0.90000000000000002' />
        </column>
        <column alias='Gamma\Alpha' caption='SwapAlphaGamma' datatype='boolean' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='false'>
          <calculation class='tableau' formula='false' />
          <aliases>
            <alias key='false' value='Gamma\Alpha' />
            <alias key='true' value='Alpha\Gamma' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Result'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dfRunLog' name='textscan.11p71ra0ulb2ak14awv5n11ipk66' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TrialSize' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='100'>
              <calculation class='tableau' formula='100' />
            </column>
            <column caption='line' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.90000000000000002'>
              <calculation class='tableau' formula='0.90000000000000002' />
            </column>
            <column alias='Gamma\Alpha' caption='SwapAlphaGamma' datatype='boolean' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='false'>
              <calculation class='tableau' formula='false' />
              <aliases>
                <alias key='false' value='Gamma\Alpha' />
                <alias key='true' value='Alpha\Gamma' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.11p71ra0ulb2ak14awv5n11ipk66'>
            <column aggregation='Sum' datatype='real' name='[Alpha]' role='dimension' type='ordinal' />
            <column caption='SucessInt' datatype='real' name='[Calculation_954200200408829952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='float(if [Sucess]=&apos;Y&apos; then 1 else 0 END)' />
            </column>
            <column caption='PercentageCorrect' datatype='real' default-format='p0%' name='[Calculation_954200200413347841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_954200200408829952]/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Sum' caption='Field1' datatype='real' name='[Calculation_954200201835646980]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 3] then [Alpha] else [Gamma] end' />
            </column>
            <column aggregation='Sum' caption='Field2' datatype='real' name='[Calculation_954200201835786245]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 3] then[Gamma] else [Alpha] end' />
            </column>
            <column aggregation='Sum' datatype='real' name='[Epsilon]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[Gamma]' role='dimension' type='ordinal' />
            <column caption='Q Table Size' datatype='real' name='[QTableSize]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sucess]' role='dimension' type='nominal' />
            <column-instance column='[QTableSize]' derivation='Max' name='[max:QTableSize:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_954200201835646980]' derivation='None' name='[none:Calculation_954200201835646980:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_954200201835786245]' derivation='None' name='[none:Calculation_954200201835786245:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Epsilon]' derivation='None' name='[none:Epsilon:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_954200200413347841]' derivation='Sum' name='[sum:Calculation_954200200413347841:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Epsilon:ok]' value='64' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]' value=''>
              <formatted-text />
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[Parameters].[Parameter 2]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='252' />
                <format attr='maxheight' value='252' />
                <format attr='minwidth' value='180' />
                <format attr='maxwidth' value='180' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Epsilon:ok] * ([textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk] + [textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]))</rows>
        <cols>([textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Calculation_954200201835646980:ok] / [textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Calculation_954200201835786245:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='dfRunLog' name='textscan.11p71ra0ulb2ak14awv5n11ipk66' />
          </datasources>
          <datasource-dependencies datasource='textscan.11p71ra0ulb2ak14awv5n11ipk66'>
            <column aggregation='Sum' datatype='real' name='[Alpha]' role='dimension' type='ordinal' />
            <column caption='SucessInt' datatype='real' name='[Calculation_954200200408829952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='float(if [Sucess]=&apos;Y&apos; then 1 else 0 END)' />
            </column>
            <column caption='Dead Line' datatype='real' name='[DeadLine]' role='measure' type='quantitative' />
            <column datatype='real' name='[Distance]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[Epsilon]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[Gamma]' role='dimension' type='ordinal' />
            <column caption='Q Table Size' datatype='real' name='[QTableSize]' role='measure' type='quantitative' />
            <column datatype='real' name='[Steps]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sucess]' role='dimension' type='nominal' />
            <column-instance column='[DeadLine]' derivation='Avg' name='[avg:DeadLine:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Distance]' derivation='Avg' name='[avg:Distance:qk]' pivot='key' type='quantitative' />
            <column-instance column='[QTableSize]' derivation='Max' name='[max:QTableSize:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alpha]' derivation='None' name='[none:Alpha:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Epsilon]' derivation='None' name='[none:Epsilon:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gamma]' derivation='None' name='[none:Gamma:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_954200200408829952]' derivation='Sum' name='[sum:Calculation_954200200408829952:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Steps]' derivation='Sum' name='[sum:Steps:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200408829952:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Steps:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200408829952:qk]&quot;</bucket>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Steps:qk]&quot;</bucket>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[avg:Distance:qk]&quot;</bucket>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[avg:DeadLine:qk]&quot;</bucket>
              <bucket>&quot;[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]' value='91' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Epsilon:ok] / ([textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Alpha:ok] / [textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Gamma:ok]))</rows>
        <cols>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='dfRunLog' name='textscan.11p71ra0ulb2ak14awv5n11ipk66' />
          </datasources>
          <datasource-dependencies datasource='textscan.11p71ra0ulb2ak14awv5n11ipk66'>
            <column aggregation='Sum' datatype='real' name='[Alpha]' role='dimension' type='ordinal' />
            <column caption='SucessInt' datatype='real' name='[Calculation_954200200408829952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='float(if [Sucess]=&apos;Y&apos; then 1 else 0 END)' />
            </column>
            <column aggregation='Sum' datatype='real' name='[Gamma]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Sucess]' role='dimension' type='nominal' />
            <column-instance column='[Alpha]' derivation='None' name='[none:Alpha:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gamma]' derivation='None' name='[none:Gamma:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_954200200408829952]' derivation='Sum' name='[sum:Calculation_954200200408829952:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200408829952:qk]</rows>
        <cols>([textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Alpha:ok] / [textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Gamma:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='dfRunLog' name='textscan.11p71ra0ulb2ak14awv5n11ipk66' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TrialSize' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='100'>
              <calculation class='tableau' formula='100' />
            </column>
            <column caption='line' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='0.90000000000000002'>
              <calculation class='tableau' formula='0.90000000000000002' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.11p71ra0ulb2ak14awv5n11ipk66'>
            <column aggregation='Sum' datatype='real' name='[Alpha]' role='dimension' type='ordinal' />
            <column caption='SucessInt' datatype='real' name='[Calculation_954200200408829952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='float(if [Sucess]=&apos;Y&apos; then 1 else 0 END)' />
            </column>
            <column caption='PercentageCorrect' datatype='real' default-format='p0%' name='[Calculation_954200200413347841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_954200200408829952]/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Sum' datatype='real' name='[Epsilon]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[Gamma]' role='dimension' type='ordinal' />
            <column caption='Q Table Size' datatype='real' name='[QTableSize]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sucess]' role='dimension' type='nominal' />
            <column-instance column='[QTableSize]' derivation='Max' name='[max:QTableSize:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alpha]' derivation='None' name='[none:Alpha:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Epsilon]' derivation='None' name='[none:Epsilon:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gamma]' derivation='None' name='[none:Gamma:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_954200200413347841]' derivation='Sum' name='[sum:Calculation_954200200413347841:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Gamma:ok]' value='31' />
            <format attr='width' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Alpha:ok]' value='36' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Epsilon:ok]' value='64' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-pane' value-column='[Parameters].[Parameter 2]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='252' />
                <format attr='maxheight' value='252' />
                <format attr='minwidth' value='180' />
                <format attr='maxwidth' value='180' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' y-axis-name='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Epsilon:ok] * ([textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk] + [textscan.11p71ra0ulb2ak14awv5n11ipk66].[max:QTableSize:qk]))</rows>
        <cols>([textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Gamma:ok] / [textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Alpha:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='dfRunLog' name='textscan.11p71ra0ulb2ak14awv5n11ipk66' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='TrialSize' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='100'>
              <calculation class='tableau' formula='100' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.11p71ra0ulb2ak14awv5n11ipk66'>
            <column aggregation='Sum' datatype='real' name='[Alpha]' role='dimension' type='ordinal' />
            <column caption='SucessInt' datatype='real' name='[Calculation_954200200408829952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='float(if [Sucess]=&apos;Y&apos; then 1 else 0 END)' />
            </column>
            <column caption='PercentageCorrect' datatype='real' default-format='p0%' name='[Calculation_954200200413347841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_954200200408829952]/[Parameters].[Parameter 1]' />
            </column>
            <column aggregation='Sum' datatype='real' name='[Epsilon]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='real' name='[Gamma]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Sucess]' role='dimension' type='nominal' />
            <column-instance column='[Alpha]' derivation='None' name='[none:Alpha:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Epsilon]' derivation='None' name='[none:Epsilon:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Gamma]' derivation='None' name='[none:Gamma:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_954200200413347841]' derivation='Sum' name='[sum:Calculation_954200200413347841:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Gamma:ok]' value='74' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]' max='0.98999999999999999' min='0.96999999999999997' num-steps='3' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#aebfb4</color>
                <color>#94b5a0</color>
                <color>#7caa8d</color>
                <color>#66a07b</color>
                <color>#51966b</color>
                <color>#3f8b5b</color>
                <color>#2f814d</color>
                <color>#207640</color>
                <color>#136c34</color>
                <color>#09622a</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]' />
              <text column='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Epsilon:ok] / [textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Alpha:ok])</rows>
        <cols>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Gamma:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1200' minheight='900' minwidth='1200' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99667' x='0' y='0'>
              <zone h='84444' id='1' name='Result' show-title='true' w='99667' x='0' y='15556' />
              <zone h='9444' id='12' param='horz' type='layout-flow' w='99667' x='0' y='0'>
                <zone forceUpdate='true' h='9444' id='13' type='text' w='99667' x='0' y='0'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='14' underline='true'>Machine Leraning Enginner Nanodegree P4 results</run>
                    <run fontalignment='1'>&#10;(</run>
                    <run auto-url='true' fontalignment='1' hyperlink='tabdoc:load-url url=&amp;quot;https://github.com/dmenin/UdacityMachineLearningEngineerNanodegree/tree/master/4_TeachingCabToDrive&amp;quot;'>https://github.com/dmenin/UdacityMachineLearningEngineerNanodegree/tree/master/4_TeachingCabToDrive</run>
                    <run fontalignment='1'>)</run>
                  </formatted-text>
                </zone>
              </zone>
              <zone h='6112' id='14' param='horz' type='layout-flow' w='49834' x='0' y='9444'>
                <zone h='6112' id='15' param='vert' type='layout-flow' w='49834' x='0' y='9444'>
                  <zone custom-title='true' h='5666' id='7' mode='compact' param='[Parameters].[Parameter 3]' type='paramctrl' w='49834' x='0' y='9444'>
                    <formatted-text>
                      <run>Display:</run>
                    </formatted-text>
                  </zone>
                </zone>
              </zone>
              <zone h='6112' id='16' param='vert' type='layout-flow' w='49833' x='49834' y='9444'>
                <zone h='5332' id='6' name='Result' pane-specification-id='1' param='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]' type='color' w='49833' x='49834' y='9444' />
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='28'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Alpha:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Epsilon:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Gamma:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Sucess:nk]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Trial:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Alpha:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Epsilon:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Gamma:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Sucess:nk]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Trial:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Alpha:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Epsilon:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Gamma:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Sucess:nk]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Trial:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Result'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Alpha:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Calculation_954200201835646980:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Calculation_954200201835786245:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Epsilon:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Gamma:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Sucess:nk]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Trial:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.11p71ra0ulb2ak14awv5n11ipk66].[sum:Calculation_954200200413347841:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Alpha:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Epsilon:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Gamma:ok]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Sucess:nk]</field>
            <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[none:Trial:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Result'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[textscan.11p71ra0ulb2ak14awv5n11ipk66].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2deZAc133fP90997mz9zW7uA8uSAIkQRGkJNqSJUKuou3ElmwllXISVyV/
      xvEhy0dVkqq4yuVUnHJiV6WkOFGU2FWS7aRKtiQqpimCFEGKAAEQ2F1gF8fe5+zMzn309fLH
      AAsssNid3e29MO9Thdqdwezrb7/5ffu93+tfdytCCIFEUqeoOy1AItlJpAEkdY1rpwVIdhhh
      cuXSx/gijUR8Cp5QA5VcGs3jo1A28HtcaJgEYm2E/R7Gxibp7e0mNTtJQfGRnp0h2tJIamaS
      3oPHWExnObAvvtN7VTPSAPWOkUfxhEkkEixU5hgZL3Ho6SMEK7NMpDT8ra34y0nUUIZPnOxD
      i8ZACG6PjFKyVFJjt2k9dAJbhY/Pv0NCd9G9L45np/erRhSZBEsSs5NYriBmKY/H4yEQCqFY
      FSqmiupxU0ynCDU0Eg4GwNJB81AulxG2zfSdYcxIG92NYWyzQjJdpGdfD5qy03tVG9IAkrpm
      25LgYrG4XZtyDKl5e9hJzXt6FWjw6kdcvnad/OI8b/79O5g7LagGrl76gKvXb2HpRf7urXd2
      Ws7aCMGlH7/L9Ztj3BkaZHx+cacVrYleXOSN7/+AbNngR2+9wfU7k4/97J5OghOLOYSdJR/z
      kM4X94SbF3NF7MVRLmdmmZ6bxxag7vL5crZYIZ2/SblUJhT30tMa22lJq1LJp8jnC4xPz5Je
      TKM2ZB/72W3LAYrFIoFAwNE285kkFdtFpZAhWzA4fPQgmoPtb4XmdHIeoXnR3F5so0xDQ4Oj
      7W+F5uTcDC6fH8uy0dxeouGgo+07rVkIm8nJacLhEOVijnBjG0HfyutSe9oAW43UvD3spGYX
      gBBiyxORSqXCXltwkpq3h53U7AJQFIVgcHPDWnp+EtMVYHRkiuYmP5ZpU7HctDSFaWluRlGU
      PXdkkpq3h53U7FgSbBQXGU+miIRcTKYNoiJDKl1kfiHMS5EIlUplz30xkicfxwwQbe5iXwRG
      RqbpbvShePbT3gXzcwu4PR5sc/kipa3rTP3qryLKZdxd3bjj3XjicdzxOJ54HC0SAeXR5REh
      BKJcxspmsTIZ7GwWIQS+Y8fQwuENaRe2jT4+jqKqeHp6NtSGXSiQP3eO7BtvoI+MEDjzMqGX
      XyZw+gXUTY6uSzotC31khFJ/P+WBASrDw8S+/GUiZ8860n49suNJsF2pYExNYUxMoE9MYExM
      ok9MYGWzKAooHg9CNwABVA2h+Hxo0QhaJIoajYBhUrl5EyuXw93Rga+vD9+JPnzHjz9iCmHb
      GBMTlPoHKA/0U7kxhK1X8PT0En39dYJnXlpT85L2YpH8uXfI/uAHWIspQq/+BJHXXsPV1kp5
      YIDC+fMUL1xEIAi+cJrgy2fwnTiB4lr9uCOEQJRKGNPTlAcHKfVXg12YJt79+6v71teH98gR
      VM/y1Y3dngQLywIhlvXBRjQL2662o21u3W/HDbAa9472is+HssJosNLnzdlZyv39lAYGKA9e
      xy7kcXd04mpqonLrFna5jKen575Jjh5F9ftr1myXSuTfeYfcGz/ATCYJvfppwq+9hqera8UR
      C6qjQ/HiRQrn36fU34+rsRHPwQPY+cLSKGYvLUJUvw7F78fd1o6v76lqsB89+kiw16p5N2DM
      z5P5678m//Y5Wn7tXxP8xCeW/m+9mm1dZ/orv4WVTtP9n/+4OlvYILvaAE4ghMCcmcFMJvEe
      OvTYYF+JhzVbmQxTv/kVAqdPEzn7Gp7u7scG/WoY8/MYY+OokTBaJIIWjaL4/TWZfL2a18LK
      ZtHHJ7DzObRodGlUVYPBTesRtk3h/HnS3/5L7HKZhp//h4Q/8xkUt3vDmm1dZ+arXyX4yidx
      tbWS/Pp/o+uP/iOupqYNaXziDbAZngjNQqBPT2OM35tiTqBPTmAlFhCAFgnjicdRg0GsXB4r
      m8HOZLELBXggNBSfD1dz86O5WlPTI0YxEwnS/+f/kn/rLQKnX6Dhi1/E09tbu+bHYOs6M7/9
      OwTPnKHhF36++reXLjH/R/+Jrv/wh7g7OtbXWWyjAXK5HENDQ9uxKcfQNA3LsnZaxrp4WLOZ
      SJD82tfQYjHc3feD19XUtK7RS5TLmIkF9MmqiYzpGcxUClEpowZDuJqb8cTjGLOz6CN3CH7q
      U4Q/+1MoHveabdfSz8KySP3Zn+Hq6CD6+uvL/q984waLf/4XtP7qv0Jb50ggR4BV2EnNpmFh
      mwKPf30LdTuhWQiBncmgT0ygRSKrHu1XYi3NwjCY/u3fIfDii8S+9MUVP1O5c4eZ3/092v/t
      v8F39GhNmsv9/dIAq7GTecu1tycpZnWeP7sPt7f2lY4nrZ+FYTD9u79L4PkXiP3il1ZtR5+a
      Yvorv0Xbb/4m/pPPkp4vYuo2zd2h++0JQfH9D0h+4xu4mhqlAVZjpzSPXlvgzpUEiqIQbvRx
      6vM9aK7aal2fpH6uBv/vEXjuFLFf+qWa2jITCaZ+/Tdo+JV/Qf9CK5WiSXM8zJHnm9HPn2Px
      z/8C79GjNP3TX8bd1SUNsBo7oTk1U+DKmxPLpuex9gDPfCaOWkPd9EY0V0omifHcmp9r7Qmv
      e0pWCw9rzi6USIyk8f/VH+M/+SyxL395Xe1Z6Qznv/JfKR08jau9DX18HOP2LeLtFn2/8U9w
      N9/PExw1gFnOMTA8SUPEjflQLZA0wNqUCwYX/nYE07CXvS8EtPaE6Pt015pLk+vVnEuW+fiH
      ExjltZN9j1/jmZ+ME2701dx+LTxigESRt//dX/HMqQD7fuUX1t3e3GiW/h+OUfzwQ0SpjLsn
      jnf/fnC5CEa9HH2pnYbW6vYctXMpkySRWMDSmnHr9VULZFuCzHyR1GyBUMxH2771nZyxLZtr
      b08+EvxQXayZH8/h/nCOIy+2OXK+AGB+LMvge9OIRze5InrJ4qM3xuj7ZCctPRsrO6kFM5nE
      3dbGRGg/7XkDX2jtlaR7VIoGQz+eRXW7Cb78cvVssXp/+ljM6lz6wRjtB6IcfqHNWQP4Ik20
      t5cJ+l2oDavXAu11bEuQSRRJzRRIzxXJJEogQFEVhC1YnClw5MU2VK22ufvwh3PkUuXHBrei
      KEwNL+L2aex/pnnTJhi5usDIlQTKOi9HE7bg2rlJDpxsYd/TzZvS8Diq5xvimIbNtXOTPHe2
      F62GfhRCcOP9Way7BxFFUVZc6lUUhbmRLAuTeWcN4PaHOdF3bNl7La1tTm5iR7Ftwdi1BVIz
      RTKJIkKwNC+vdnb1c4qqMH0rTWahxNOvdhGIeFdtd/pmmulb6TWDWlEURq8u4PZoxI83bmwf
      LJvB92aYH8uuO/gf1HHnSoJCpsLxM52oW3gPlFyqzPCHcxw/s/ZJrumbaZLT+ZoPDpZh7+1r
      ggEM3WL2TgazYmGaNpZhY+o2pm5h3Xtt2LjcKg1tARraAzS2B3F51l9EZRk2o9eSQDUIVutn
      RVEoZnQufHeUY2c6HjslyiZLDF+Yq/lLUxSFmxfncHs12g9E16VfL5l8/NbEqiNNrdw7ipay
      Bs98phuPb2tCSVEUZm6liTb76Tz8+MtHi1mdWx/Nr3u/9rQBUjMFrr83jV5DAlcBChmdyaFF
      hC0IN/poaAsQaw8S6wjgcjt5NfF9bEsw8M4Ui7MFjpxePiUyKhb956YQ9vrWIRRF4fr7M7g8
      2rI17tXIpcpcfWsCvWw5lkMoikIuVebCd0d59jPdhGLOJscPbmf4wiyhRi+RpkdruWxbMPje
      NLa1/vWcvXAjhUewLZvhC7NceXO8puB/EEVRUDWVQkZnajjNtXOTnPuLIX78nTsUMpUt0auo
      CtM301z83ijFrA5U56sD705RLhgba1TAtbcnqZTWzq0S4zk+emNs3X1VK3rJ5KM3xkhMrL2U
      ulGEDf3npjDKj+7vWH+S7EJpQ+3uuREglyoz8O4UxazuyJFMURQUTSG/WKZSNAlGV5+vb2Y7
      hYzOhe+OcOxMB4V0hdRMYVP7YJk2ZsXCu8ra/L1pT60n0jaKbVXPXgciHjx+F76gG6/fhTfo
      xhd04Q958IXcm9JRLhgM/GiaZz8TX8pfsskyo9cWNtyPO2YAIQSp6QKRFj/uGubjwhaMDSQZ
      +XgBwLFhfLu5NyUCNpyErmt765xebQZFUSjlDEo5gwz3j8hCiKXpieZW+eQvHF5XeceD7adm
      CoxcXeDAyRYs0+b6e9P3LqHYEDtnAFvQ/84Uhm4Rjt2dj7cFiHUGHzFEKacz8KNpsgulPRv4
      D7Idgb+bUBQFzVXdZ9sUG5qrP9jWWH+ScJOPxdkihUxlUzGxo1MgRQFNUylmdYpZnanhaoIa
      umeI9gBG2eLWpXlsSzwRwS9xhoF3pxD25mcCuyoHuDcff9AQ996XSB6k1rPXa+GoAcxyjv6h
      cRoiXixreS3QRpCBL9lqHDXAzJ1RSqaOKKq46qwWSLI3cdQA7ft7ydyZIRTQUJ7wWiDJk4HD
      tUARTvQtP+X/JNUCSZ489uSZYInEKZYZYG5qjPcvXkYIweXLl3dKk0SybSwzwGK2SCjgRVEU
      fN6tKQmQSHYTywxwcH+cUKiBQqFAzzpvbSGR7EWWJcFuX4j9PbWV10okTwIyCZbUNdIAkrpG
      GkBS1zheDJfP5zBKeSzNi2nYhEP+TT9/TCLZKhwvhvvhux9waF8npfQcCzlBpKWDl0495eRm
      JBLHcHQKZFmCSNCDaVoEmvdz5PA+jPQCRV2nUtma620lks3g6AjgDUZ49dOvLntv3/6D1V9k
      MZxkFyKTYEldIw0gqWukASR1jTSApK6RBpDUNdIAkrpGGkBS10gDSOoaR0+E2abO6OQcDUEX
      tqwFkuwBnK0FMnTMQo6RvEDJyVogye7H0SmQWSkwm87jQ9YCSfYGjo4AgYY2Pv3K8vsAyVog
      yW5GJsGSukYaQFLXSANI6hppAEldIw0gqWukASR1jTSApK7ZkmeEXbn4Afl8mumUycmTJzly
      oHsrNiORbJotGQEEAn+sm2eP9vDRB++xwWehSyRbzpaMAKdeOLP0+9G+ZwBWNIFlCizDocf9
      bRLbFjU9cNky7U09mNlJLLO2vttNmkWND+7eLs2KqEKxWNzSDVUqFbx77JkDUvP2sJOaXVB9
      HOlmS5bT85OYrgCjI1M0N/mxzOWPSVUUZc89JVJq3h52UrNjUyCjuMh4MkUk5GIybRAV8jGp
      kt2PYwaINnexLwIjI9N0N/pQPLv7ManCttHHxikP9FPuH6A8NETk7Fliv/ilnZYm2UYUIcS2
      pEfFYnHHRgBh2xgTE5T6BygP9FO5MYRdqeDp7cHXdwJ/Xx/eY0dRfb5NaRZCIEolhG2jhXbm
      STtO97MQAv3WLTLf/R5WMkn0Z34G//PPoajOLSDuZGw8cQYQQmBMTFAeGKge2W/cwC6X8fTE
      8fX14es7ge/YUVS/f92a7UKB1De/iZlKYWWy2JkM9tLiQbUbFY8Xu1xC8XgJnD5N8OUz+E+c
      QHFtyYLbmpo3ghAC/fZtsm+8QeH8+3h6e4mcPYsaCJB76+8pXbqM7+mniXzhLP5TpzZthro0
      gLBtih98gLmwgJXJYmUz2Nls9fdMBrtQANvGSqfRYjFwudAiEbRoBC0SRb37U4tGEJZN5cZ1
      ytdvYJdKeLq78Z24F+zHUANrB3tNmk2T0tWrqIEAWjSKFomgBAIoivLI39qFAsULFymcP0+p
      vx9XUxPBMy8RfPll3L29j/6NENiVCla2aiwrmwUhcMfjuFpaag6yjQaTEAL9zkg16N97D09P
      nMjZLxB8+QyKx7P8s7ZN6epVct9/g9KVK/ieeaZqhpMnN2SG+jSAYbD4rW+heLxLQa1FI6j3
      foZCy4JEGAZWNlv9l7lnlgxWJoMQ4H/qOL7jx1Ed7Egnvxhjbo7C+x9QOH8eY3wcNRhE6Do8
      0P2Kz/uAuSNgC4ypKcxEAiEEWiiEO96NJx7HHY/jicfx9PSieNwb1iyEIPud77D4rW/j7u4m
      8oWzBF95BfWhoH/s39s2pY8/Jvv9Nyh//DHu3l48vb14euK4u+N44t1oTU0rHiQ2qtlJts0A
      uVyOoaEh5xoUkFkoMTm0iOZSOPx8G5rb2RPbmqZhWZajbQLVo32xWDXrKoHxMHY+jz4xgTEx
      iT45gTmfIPSpTxJ85ZUNaTbn50n9z2+ihkM0/vIv1zQtXBUhMCan7mqcwJiZxkwtIioV1GAQ
      V0sLnnicwIuncbW2bkiz0+y5HMCybKaH04wPJKmUzKUjiz/s5uRne/CF3Gu0UDs7eWTaKLVo
      tvJ5Fv7kT9FHR2j76lfx7Nu35bqEEFiZDMbEBO7OTlxNTUv/VxcjwGZ30jQsJq4vMnE9halb
      Kw6pHp/GyZ/qIdjgzFnFJ80AQgiy3/seqW/+L5r++T8j/PnPrzo12S52sp+3Z2liE+glk/HB
      JJNDaWxLoCg89kvTyxaX/t8Yz/xknGjLJofzJ4zK7dvM/cEf4Dt6jN7/8d8dzZX2MrvWAIVM
      hfGBJLN3skvv1XKwMnWbK2+Oc+LTXTR1yafe25UKC//lTygPDdH21a/iPXhwpyXtKhx/SuTA
      8CQNETfmQ7VAtSCEYHGmyPhgkuR0AVXd2PBsW4KrP5zkqVc6adsf2VAbG2V8IEm5YHDohbYN
      63cSu1DA98wztPz6r+34dKeY1bl9aZ5jZzpwe7UNtyOEwNRtXG4V5TF9bOXzpL/1LfTJSQIn
      T+E70Ydn3z4Ubfl2HTVAKZMkkVjA0ppx67XXAtmWYPZOhonrKfLpCqqqOBI8g+9NY1Qsuo/F
      Nt3WWpiGzfX3pklM5IDqCtXTr3bjCzqXlG8EV2Mjkc9/bkc1lAsGI1cSzNzJIGw48mL7qp83
      5uZIDU1B9wHKJQu9aFIuGlQKJpWiQbloImyBL+im83AD3UdjePzVUDaTSRb/959T+OADov/g
      54i+/jNUhodJfeMbVEZGUdwufEeO3j1P1OdsEmyUcgzdmSLod6F6wwTc1VqgY0/3UVkh0TEq
      FhM3UkwNLWJUVk5sN4sQgn3PNHPg2ZZ1/22tyVkhXeHa25MUc/qyfXB5VPo+1UVjx/orbYUt
      KGZ1jIqFqVuYpo2p25i6hWXYWKaNUbE4/ELb0pe/Hs3bgVExGbmaZGpocek92xJ88ouH8QYe
      rzkzlebdP30He24aNeDH3d2Nu739kaM3AKJ6AVZzs0ao/y20/g+I/eN/RPizn13x83alQvby
      AOPf/zELU/mdWwWyLcF7f30TU9/6C2KEEPjDHiJNPkKNPiJNPiLNfjTX6ucNagmmudEsN96f
      wbYe3437n22m98TqJ4PuYVs2U8NpxgeTlHIGiqo8NvG3TJszP3dw2arXbjCAZdqM9ScZH0w9
      cgFMLQbILpT48G9H0DQFK5/HmJzEmJ1DDQTwxLtxtbUtBbeVyVAeGkZUKniOHKHhcDddR2N0
      HIwufb9CCPKpCvPjWRYm8+RTZVRNAZSdTIJFzVcHbRZFUSjnDcp5g/mxHLZd3XYg6iEc8xFu
      9BFu8hHrCNY89bJtwa2P5pm8kVozsO9cSZBdKPHUK524PCvPfU3DYvL6IuMPLPOuZdCadFo2
      kzcWMe+OGpZxdyQxrGXvqZqKP+TGH/HgD7kJRDwEG7x4A641908IgW0JTN1ibjTL6LUklmEB
      mxzRFQUtHEY7fhzvsWPY+TzGxCTloeHqKpZpgqriPXoEV2MjUM0zhj+c5fZH87QdiICAhak8
      lYJ5N+hB1e73665dBdpKVFUBVanOKQt5FibzWKbNc5/vpbFz7elKpWTSf26KTKJY01FdURSS
      UwUufHeUp3+im1Ds/hFbL5uMD6SYHFrEtmwURXF0KqiXLYYvzNVkplJOh5kCcD+oFVUhEHbj
      C3lQNWVp+mUa1emYqdvLLs1UtXv6nZ3OKvfM8NRxvMePYedySwZZ6bO2LZi5lVmmayXq0gAr
      Uet3lp4r0v/O1IZylnLB4OL3Rzl2pp2GlgCj/QvM3KrWMq12fmMnqI5AVT3lgkm58PjrOZwY
      qdaDoijVWikHkAZYB6ZucfnN8U1drC1sweC70whYmm7torivO6QB1oEQOHKnAkVVHJ4gSDaK
      vDOcpK6RBpDUNdIAkrrG8Vqg/qFxGiJeLGv9tUASyXbjqAFm7oxSMnVEUcW1jlogiWSncNQA
      7ft7ydyZIRTQUBp2932BJBJw2ABuf4QTfctPULS0tj3m0xLJziOTYElds8wAc1NjvH/xMkII
      Ll++zMjN60zOJnZKm0Sy5SwzwGK2SCjgRVEUfF4vbreH2dm5ndImkWw5y3KAg/vjTM5nKRQK
      9PT2Iowynsj6LySRSPYKywzg9oXY3/PgheRB5GXlkicZmQRL6hppAEldIw0gqWscvx5gbGwU
      VZjoG7gvkESy3Tg6AhRSU/zd2++xWDQo5lIkpkcYGBqhrOtUKhUnNyWROIKjI0CwsYuf/enP
      Uc5nsaOyFkiy+3F8CtTS0got9+/9LmuBJLsZmQRL6hppAEldIw0gqWukASR1jTSApK6RBpDU
      NdIAkrpGGkBS1zh6IqySTzFwa5pY1Ict7wsk2QM4agBvMEZTKEm2bEBZ3hdIsvtx1ADFTIL5
      bJnmBj9qRNYCSXY/jhog0NDK6edal70na4EkuxmZBEvqGmkASV0jDSCpa6QBJHWNNICkrpEG
      kNQ1W/KUyMXEDJbmxTRswiE/weDaD5+WSHaCLTHA7EKKUnqOhZwg0tLBS6ee2orNSCSbZkum
      QKqwCDTv58jhfRjpBYyt2IhE4gAuACEEpVLJsUbj+w4t/d7a1oFRLK5YC2SZAsuwHdvuZrBt
      UdNDsC3TduRh2U5gmbX13W7SLOzahGyXZkUIsS1dUygUtmMzjlKpVPB6vTstY11IzevDsRxg
      8tY1TE8D46PTxJr8WKUCectPT2crPfFOFEXZc9WgUvP2sJOaHcsBGkJ+UslFGmMBMoaG2+fH
      bWQZvD5EUd4aUbJLcWwE8Dd2cTymMDU5y/GwFzxhfPsVstksAY8HHiqHFrZN6coVXC0tuDs6
      UFxbsiAlkayKY1Gnefz4gUMH9y17/7HnAGyb0keXqNy5gzEzjTAtVK8Xd1cX7ngcT7y7+nPf
      PjR5HkGyRWxbElwsFtec59mVCsbkJPrEJMbEBMbEBOXBQdxdXTT84pfwnzqFoijbIReoTfNu
      Q2peH7vKACshhKAyNEz629+mfOMGkZ/+AtHXX0eLRh3TZhUKGBMTqKEQnu7uTWveSaTm9bHr
      DfAgdrFI9nvfI/Odv8Hd3UXDl76E/9lnVx8VhMA2DKxk8u7oMoE+MYExMYk5P4ewBVowgLs7
      TvhzP0XwpZceq1kIgTAMVI9nU/uxlUgDrI9tM0Aul2NoaMix9sqD18n8zd8gKhWCZ15CVCpY
      mSxWNoOdy2FXdIReQegGIFADQbTGRtxdnXjicdzxOO7WVlAfvxCmaRqWZS29tnM55v7wD8EW
      qOEw7s4OPF3daE1NaI0xXLEYaigE2zhNW0vzWuglk9k7GRRVoeNgAy7Pyv1hJpPoIyN4jxxB
      i0SckgusX7OT7KkRYCWsfJ7ywCBqKIgWiaBFo6ihEMoqgV0rq2kWloU5N3d3NJlY+mkmFhBC
      bDpXEbaNncuhRaMoPh9aNIIWiaJGI0v7qUUi+J5+Gnfb/euua+3nQqbCyMcLzI9mUdS7WhXo
      Od7Ivmea0VzV/hNCkD93juTXv07ktbMUL13CnJ/Hd/w4wVdeJvDii2ihzT1Md6tiw7YFisKq
      38WeN8BWsis0C4FdLmNls1iZDPbdn/deB06dwv/ss0sfX0vzioG/bHMCl0fj4KkWOg9FSX7t
      65Rv3KDj9//90mqcsCzK169TOH+e4ocfIkyLwPPPE3z5DL6nnkL1+dY1Cj6suVwwSEzk6Drc
      gKqt/0BmmTaTNxYZG0jiC7g49EIbjR0rryRKA6zCw5rvdWzn4QbcXm1Lt51LlklO5+k41IDX
      X/tq9eP6ea3AfxjbMLCv/Jh97QaHfutfrjqi2qUSxY8+onD+PJWbNxHlB056KgpqIFAdme+O
      XpGzZ/Eeul8v9rDm7EKJD/92BI/PRdfRBuLHG/H41u6De9/P+EASQ7eWjvzCFjR2hTj8fCvB
      huUlF9IAq/CwZqNi8aO/HAZFoeNglJ6nmghEnE+I0/NFrr41iWXa2LaguStE5+EGmrtDawbv
      I6at6Ay8NcpCwqop8KE6rSxeuIDv6DFc7e3E2oMcPt1KKOZb974IIbALhWUjl/fgQVwP3C3w
      cQbQXGp1Ogm0Haj2dyj2aM3Q4wJ/JS2dhxo4cKplyVCOGkDPJfjgyhjNzR70wvJaoCfHADeX
      Xt8Lzp6+RhraAo6co0hO5+k/N4VtLf9ahC1w+zQ6DkbpPBx7rPEe1lycTfHm738Xinncbe24
      493VHGklrUJgzM1RHrxO4PQLaOHwsu03tAVo7g7R2hvBF3Jvel8fp/lBAzyIbQsa24P09DXS
      2BnEtgSTQ4uM968e+A+jqAq9J5ro6Wt09oKYUiGPZZbIm36CPj/udJbB64s0tzU/kbdGVFWF
      1EyBhak84UYv8eNNtO2PoNZ4pH2Y+fEsg+9Os9IhSVEVTN1m4voiY/0pGtoDdB6K0n4guuoX
      r4bDBJ5/HlURGLNzlAcHsYsl3O1tuLvvm0EIQWV4GHMhSehTn0RxLw9wRVXIJEqk54sMX5gj
      FPPRHA/R2hMm3ORbVYNpWOSSZfLpCsWMzsHnWnG51z+3V1WF9HyR1GwBn6qjZwuIcAxFUdZ1
      8BG2YOTjBFPDi84aINIa54DuJuTT1qwFgurQ9bDL9yKqqlBI61w/P83tS/PEn2qk+2hsXfs2
      eyfD9fMztW1PU8gmSixOF4g0+R+Z166Eoml4ujrxdHUiLAtjdpbywCB2qYS7vR0rk0ENhQi+
      fGb1VRNFQXMplHI6E4Mpxq4l8fg1mrtDNMfDuDwq+cVqoBfSFQqZCpWiiaIqqOPK2qkAAASy
      SURBVKqCbQn2Pd28IQMsUSmTfP8DVL8PXC78Tz9dTbzXgaIoGGXLWQMoqovenu5l7z2uFsi2
      bN791jAev4toi59Is5+GtgChmNfRcgdDtxj5eIH0XJGGVj8N7QEa24O4PM4nsYqiYFQsbl+a
      Z3wgSU9fU01GmBpeZPjHs+s/f7DBbqqaoQtPV1fVDDOzaA1R3B0d625L1aoj0+ydLDO3Mgh4
      ZAR08iAnDIPihxfwn3wWVyyGkUhQeP99PPE4ngMH1r38vaMlmKqmUCmazI/lmB/LYVs2qksl
      0uwn2uwn2uIn1hHc0NHCtgWTNxYZvZrAMqtzikK6wuTQIsIWhBt9NLQFiLUHiXUEcLmdM4Si
      VIPinhF6+5roOhZDW2FJb6w/ye3L89ta4/Qgiqbh6e5ypi1V2agna0LYNsULF/EePoSrsREA
      d2srrqYmKrduUXjnXXxPn8DV1FRzm7uqBlnVVBCQTZTIJkqMD1YDtzkepv1AlJYaVkGEECTG
      c9z6aJ5ywXgksBRFQdEUChmdQkZfMkQo5uPEq10Eo85dmXTPCLcuzTO2ghFuX55nrD+5Y8G/
      lxBCULryMa62Vtydncv+T9E0fEePYsfjlK5eRR8ZxXeib8Vp0b1VKWtxEWvR4RzAae4FRnIy
      z8J4Ds2j0tYboeNQA5HmRxOvTKLErYtzZBKl6tGohsC6Z4j8YplK0XTUAA9uY5kRTjRRyupM
      3UzL4K8BIQSVG0MobhfeAwce+zk1ECDwiU9gzs1ROP8+nt4eXG1tWOk0VmoRK51GWCZqMIQr
      1oC7s3N3G+BBFFXBNgUztzNM3UzjD7lp3x+l41AUFLh9KbF0kqfW9e7tZskIH80vvZasjTE+
      jpXLETj9wpp5kqIouNvbcbW0ULl5k/LgIFpDDHdnB76njj9y4dWeMcCDqGo1dxgbSDJydQFF
      vXsk36WB/zAy8GvHmJtHn5ggeGb11amHUTQN37Fja35uz69Bqtr61oAlewcrk6F8fZDA6dMo
      2taUnux5A0ieTKr1RZcInD6NuoW3TJEGkOw6hK5TungR/6mTW349uLMPyVucY3BsgaDHolJc
      XgskkdSKXSzi6+vDFYtt+bYcHQEW5+bJZlLkLHlfIMnG0Roa0O6e6NpqHB0BOo8cxwzMEvZp
      iBpqgSSSnWbHaoEkkt2ATIIldc0yA4zcvM6b77yHMMtc/NFbTCzKebvkyWaZAe7dzaCQz5HI
      GTQGtva6V4lkp1mWAxw48hQHjlR//8IXXtsJPRLJtiJzAEldIw0gqWukASR1jTSApK5x/HqA
      sbFRVGGimzYVy01LU5iWB26CJJHsJhwdAQqpKf7u7fdYLBoUcykS0yMMDI1QlrVAkl2KoyNA
      sLGLn/3pz1HOZ7Gj+2nvgvm5BdweD7asBZLsQhyfArW0tEJL6/3XrW2rfFoi2VlkEiypa6QB
      JHWNNICkrpEGkNQ10gCSukYaQFLXSANI6hppAEld4+iJsEo+xcCtaWJRH7Yla4Ekux9HDeAN
      xmgKJcmWDShnSKWLzC+EeSkSeSKfESbZ+zh7Z7hMgvlsmeYGP2pE1gJJdj+OGiDQ0Mrp51qX
      vSdrgSS7GZkES+qa/w+57yqwQi4YFwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Result' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      TF2sHtrcyicAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
